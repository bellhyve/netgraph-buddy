.\" Automatically generated by Pandoc 3.2
.\"
.TH "ng\-buddy" "8" "July 8, 2024" "" "System Manager\[cq]s Manual"
.SH NAME
\f[B]ng\-buddy\f[R] \- simplified netgraph(4) manager for jail(8) and
bhyve(8)
.SH SYNOPSIS
\f[B]service ng\-buddy enable\f[R]
.PD 0
.P
.PD
\f[B]service ng\-buddy start\f[R]
.PD 0
.P
.PD
\f[B]service ng\-buddy stop\f[R]
.PD 0
.P
.PD
\f[B]service ng\-buddy restart\f[R]
.PD 0
.P
.PD
\f[B]service ng\-buddy status\f[R]
.PP
\f[B]service ng\-buddy bridge\f[R] \f[I]bridge\f[R] \f[I]interface\f[R]
.PD 0
.P
.PD
\f[B]service ng\-buddy unbridge\f[R] _bridge
.PP
\f[B]service ng\-buddy jail\f[R] \f[I]interface\f[R] [\f[I]bridge\f[R]]
.PD 0
.P
.PD
\f[B]service ng\-buddy unjail\f[R] \f[I]interface\f[R] [\f[I]jail\f[R]]
.PD 0
.P
.PD
\f[B]service ng\-buddy create\f[R] \f[I]interface\f[R]
[\f[I]bridge\f[R]]
.PD 0
.P
.PD
\f[B]service ng\-buddy destroy\f[R] \f[I]interface\f[R]
.PP
\f[B]service ng\-buddy vmconf\f[R]
.PD 0
.P
.PD
\f[B]service ng\-buddy vmname\f[R]
.SH DESCRIPTION
\f[B]ng\-buddy\f[R] (\[lq]Netgraph Buddy\[rq]) is an rc.d script for
managing netgraph(4) networks in mixed vm and jail environments.
\f[B]rc.conf\f[R] variables prefixed by \f[B]ngb_\f[R] are used to
manage \[lq]permanent\[rq] ng_bridge(4)\f[CR]and\f[R]ng_eiface(4)\[ga]
devices.
Additional tools assist with configuring vm\-bhyve and naming their
sockets for statistics and graphing.
.SH QUICK START EXAMPLE
The following commands will configure a system for netgraph in a way
that is suitable for most common setups on systems where no netgraph
configuration currently exists.
.TP
\f[B]service ng\-buddy enable\f[R]
Set \f[B]rc.conf\f[R] variables and create a \f[I]public\f[R] bridge
interface associated with the host system\[cq]s default route, then
create a \f[I]private\f[R] bridge linked to a virtual interface named
\f[B]nghost0\f[R] suitable for a local or NAT interfaces.
It will append three \f[B]rc.conf\f[R] lines similar to the following,
which you can modify before starting the service:
.IP
.EX
    ngb_enable=\[dq]YES\[dq]
    ngb_public_if=\[dq]em0\[dq]
    ngb_private_if=\[dq]nghost0\[dq]
.EE
.TP
\f[B]service ng\-buddy start\f[R]
This command creates the above interfaces.
.TP
\f[B]service ng\-buddy vmconf\f[R]
Add the our \[lq]public\[rq] and \[lq]private\[rq] bridges to the
\f[CR]vm(8)\f[R] configuration.
.PP
If you\[cq]d like to use host\-only or NAT interface, you must configure
the newly created \f[B]nghost0\f[R] interface.
For example, you may want to set up IP addresses, a DNS resolver, and a
DHCP server.
.PP
Once post\-configuration is to your liking, create jails or bhyve
instances attached to your \f[I]public\f[R] or \f[I]private\f[R] bridges
as you prefer.
See the \f[B]jail_skel.conf\f[R] for assistance configuring jails.
.SH SUBCOMMANDS
Subcommands are called using \f[B]service ng\-buddy
\f[BI]SUBCOMMAND\f[B]\f[R].
Note that all commands rely on \f[B]ngctl(8)\f[R] and require root
permissions.
.TP
\f[B]enable\f[R]
Create a basic default \f[B]ng\-buddy\f[R] configuration and enable the
service.
.TP
\f[B]start\f[R]
Load the \f[B]ng_bridge(4)\f[R] and \f[B]ng_eiface(4)\f[R] options
present in \f[B]rc.conf\f[R].
.TP
\f[B]stop\f[R]
Destroy all \f[B]ng_bridge(4)\f[R] and \f[B]ng_eiface(4)\f[R] devices,
regardless of whether they were created with \f[B]ng\-buddy\f[R] or not.
.TP
\f[B]restart\f[R]
Stop, then start.
.TP
\f[B]status\f[R]
Print a list of \f[B]ng_bridge(4)\f[R], \f[B]ng_eiface(4)\f[R], and
\f[B]ng_socket(4)\f[R] devices and basic usage statistics.
.TP
\f[B]service ng\-buddy bridge\f[R] \f[I]bridge\f[R] \f[I]interface\f[R]
Create a bridge and an associated \f[B]rc.conf\f[R] entry.
If the \f[I]interface\f[R] exists, \f[I]bridge\f[R] will be associated
with it.
Otherwise, \f[I]interface\f[R] will be created as a new
\f[B]ng_eiface(4)\f[R] device.
.TP
\f[B]service ng\-buddy unbridge\f[R] \f[I]bridge\f[R]
Remove the indicated bridge from netgraph and \f[B]rc.conf\f[R].
This operation will fail if devices appear to be attached to it.
.TP
\f[B]service ng\-buddy jail\f[R] \f[I]interface\f[R] [\f[I]bridge\f[R]]
Create a new \f[B]ng_eiface(4)\f[R] associated with the indicated
\f[I]bridge\f[R].
.TP
\f[B]service ng\-buddy unjail\f[R] \f[I]interface\f[R] [\f[I]jail\f[R]]
Remove an \f[B]ng_eiface(4)\f[R] associated with the indicated
\f[I]jail\f[R].
.TP
\f[B]service ng\-buddy create\f[R] \f[I]interface\f[R] [\f[I]bridge\f[R]]
Create a new \f[B]ng_eiface(4)\f[R] associated with the indicated
\f[I]bridge\f[R] and add it to \f[B]rc.conf\f[R] so it will be created
on startup.
.TP
\f[B]service ng\-buddy destroy\f[R] \f[I]interface\f[R]
Remove an \f[B]ng_eiface(4)\f[R] associated with the indicated
\f[I]jail\f[R] and remove it from \f[B]rc.conf\f[R].
.TP
\f[B]service ng\-buddy vmconf\f[R]
Add the bridges in \f[B]rc.conf\f[R] to the \f[B]vm(8)\f[R]
configuration.
.TP
\f[B]service ng\-buddy vmname\f[R]
Name \f[B]ng_socket(4)\f[R] devices associated with bhyve instances
running via \f[B]vm(8)\f[R].
.SH RC.CONF VARIABLES
\f[CR]service ng\-buddy ...\f[R] subcommands will automatically use
sysrc(8) to configure rc.conf with the following variables for
persistent configuration on service restart or system reboot.
.TP
\f[B]ngb_enable=YES\f[R]
Enable the service.
.TP
\f[B]ngb_BRIDGE_if=\[lq]IF\[rq]\f[R]
Link a new BRIDGE to interface IF.
If IF does not exist, create an ng_eiface device.
.TP
\f[B]ngb_BRIDGE_list=\[lq]IF1 IF2 \&...\f[R]
Create additional ng_eiface devices attached to BRIDGE.
.SH FILES
.TP
\f[B]/usr/local/etc/rc.d/ng\-buddy\f[R]
The Netgraph Buddy run control script.
.TP
\f[B]/usr/local/share/ng\-buddy/\f[R]
Helper scripts for the \f[B]status\f[R] and \f[B]mermaid\f[R]
subcommands.
.SH NOTES
These scripts were developed to assist with new netgraph features in
\f[B]vm\-bhyve 1.5+\f[R], and were inspired by the
\f[B]/usr/share/examples/jails/jng\f[R] example script and additional
examples by Klara Systems.
.SH SEE ALSO
netgraph(4), ng_bridge(4), ngctl(8), ng_eiface(4), ng_socket(4), vm(8)
.SH HISTORY
Netgraph Buddy (as \[lq]ngup\[rq]) was originally developed as an
internal tool for Bell Tower Integration in August 2022.
.SH CONTRIBUTING
To submit bug reports or contribute, see
https://github.com/bellhyve/netgraph\-buddy.
.SH AUTHORS
Daniel J. Bell.
